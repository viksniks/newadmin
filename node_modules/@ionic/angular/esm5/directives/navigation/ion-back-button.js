import * as tslib_1 from "tslib";
import { Directive, HostListener, Optional } from '@angular/core';
import { Config } from '../../providers/config';
import { NavController } from '../../providers/nav-controller';
import { IonRouterOutlet } from './ion-router-outlet';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ion-router-outlet';
import * as ɵngcc2 from '../../providers/nav-controller';
import * as ɵngcc3 from '../../providers/config';
var IonBackButtonDelegate = /** @class */ (function () {
    function IonBackButtonDelegate(routerOutlet, navCtrl, config) {
        this.routerOutlet = routerOutlet;
        this.navCtrl = navCtrl;
        this.config = config;
    }
    /**
     * @internal
     */
    IonBackButtonDelegate.prototype.onClick = function (ev) {
        var defaultHref = this.defaultHref || this.config.get('backButtonDefaultHref');
        if (this.routerOutlet && this.routerOutlet.canGoBack()) {
            this.navCtrl.setDirection('back', undefined, undefined, this.routerAnimation);
            this.routerOutlet.pop();
            ev.preventDefault();
        }
        else if (defaultHref != null) {
            this.navCtrl.navigateBack(defaultHref, { animation: this.routerAnimation });
            ev.preventDefault();
        }
    };
    IonBackButtonDelegate.ctorParameters = function () { return [
        { type: IonRouterOutlet, decorators: [{ type: Optional }] },
        { type: NavController },
        { type: Config }
    ]; };
    tslib_1.__decorate([
        HostListener('click', ['$event'])
    ], IonBackButtonDelegate.prototype, "onClick", null);
    IonBackButtonDelegate = tslib_1.__decorate([ tslib_1.__param(0, Optional())
    ], IonBackButtonDelegate);
IonBackButtonDelegate.ɵfac = function IonBackButtonDelegate_Factory(t) { return new (t || IonBackButtonDelegate)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IonRouterOutlet, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NavController), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Config)); };
IonBackButtonDelegate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IonBackButtonDelegate, selectors: [["ion-back-button"]], hostBindings: function IonBackButtonDelegate_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function IonBackButtonDelegate_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } }, inputs: { defaultHref: "defaultHref", routerAnimation: "routerAnimation" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IonBackButtonDelegate, [{
        type: Directive,
        args: [{
                selector: 'ion-back-button',
                inputs: ['defaultHref', 'routerAnimation']
            }]
    }], function () { return [{ type: ɵngcc1.IonRouterOutlet, decorators: [{
                type: Optional
            }] }, { type: ɵngcc2.NavController }, { type: ɵngcc3.Config }]; }, { onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();
    return IonBackButtonDelegate;
}());
export { IonBackButtonDelegate };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9uLWJhY2stYnV0dG9uLmpzIiwic291cmNlcyI6WyJAaW9uaWMvYW5ndWxhci9kaXJlY3RpdmVzL25hdmlnYXRpb24vaW9uLWJhY2stYnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2hELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUvRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7O0FBTXREO0FBRW1CLElBR2pCLCtCQUNzQixZQUE2QixFQUN6QyxPQUFzQixFQUN0QixNQUFjO0FBQ3ZCLFFBSHFCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtBQUFDLFFBQzFDLFlBQU8sR0FBUCxPQUFPLENBQWU7QUFBQyxRQUN2QixXQUFNLEdBQU4sTUFBTSxDQUFRO0FBQzFCLElBQUssQ0FBQztBQUNOLElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUNFLHVDQUFPLEdBQVAsVUFBUSxFQUFTO0FBQ25CLFFBQUksSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBQ3JGLFFBQ0ksSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEVBQUU7QUFDNUQsWUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDcEYsWUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzlCLFlBQU0sRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDO0FBQzFCLFNBQUs7QUFBQyxhQUFLLElBQUksV0FBVyxJQUFJLElBQUksRUFBRTtBQUNwQyxZQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQztBQUNsRixZQUFNLEVBQUUsQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUMxQixTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0Y7QUFDZ0UsZ0JBdEIzQixlQUFlLHVCQUFoRCxRQUFRO0FBQU8sZ0JBQ0MsYUFBYTtBQUNoQyxnQkFBa0IsTUFBTTtBQUN4QjtBQUVFLElBSUY7QUFDRixRQUZHLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNwQyx3REFXRztBQUNGLElBM0JZLHFCQUFxQixnQ0FKakMsU0FBUyxDQUFDLG5CQUlILENBTUgsbUJBQUEsUUFBUSxFQUFFLENBQUE7Q0FUYixRQUFRLEVBQUUsaUJBQWlCLDVCQVNiLE9BTkgscUJBQXFCLENBMkJqQztXQTdCQyxNQUFNLEVBQUUsQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsV0FDM0MsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O29CQTZCRjtBQUFDLElBREQsNEJBQUM7QUFDQSxDQURBLEFBM0JELElBMkJDO0FBQ0QsU0E1QmEscUJBQXFCO0FBRWxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25CdWlsZGVyIH0gZnJvbSAnQGlvbmljL2NvcmUnO1xuXG5pbXBvcnQgeyBDb25maWcgfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvY29uZmlnJztcbmltcG9ydCB7IE5hdkNvbnRyb2xsZXIgfSBmcm9tICcuLi8uLi9wcm92aWRlcnMvbmF2LWNvbnRyb2xsZXInO1xuXG5pbXBvcnQgeyBJb25Sb3V0ZXJPdXRsZXQgfSBmcm9tICcuL2lvbi1yb3V0ZXItb3V0bGV0JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnaW9uLWJhY2stYnV0dG9uJyxcbiAgaW5wdXRzOiBbJ2RlZmF1bHRIcmVmJywgJ3JvdXRlckFuaW1hdGlvbiddLFxufSlcbmV4cG9ydCBjbGFzcyBJb25CYWNrQnV0dG9uRGVsZWdhdGUge1xuXG4gIGRlZmF1bHRIcmVmOiBzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsO1xuICByb3V0ZXJBbmltYXRpb24/OiBBbmltYXRpb25CdWlsZGVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgcm91dGVyT3V0bGV0OiBJb25Sb3V0ZXJPdXRsZXQsXG4gICAgcHJpdmF0ZSBuYXZDdHJsOiBOYXZDb250cm9sbGVyLFxuICAgIHByaXZhdGUgY29uZmlnOiBDb25maWdcbiAgKSB7fVxuXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgb25DbGljayhldjogRXZlbnQpIHtcbiAgICBjb25zdCBkZWZhdWx0SHJlZiA9IHRoaXMuZGVmYXVsdEhyZWYgfHwgdGhpcy5jb25maWcuZ2V0KCdiYWNrQnV0dG9uRGVmYXVsdEhyZWYnKTtcblxuICAgIGlmICh0aGlzLnJvdXRlck91dGxldCAmJiB0aGlzLnJvdXRlck91dGxldC5jYW5Hb0JhY2soKSkge1xuICAgICAgdGhpcy5uYXZDdHJsLnNldERpcmVjdGlvbignYmFjaycsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB0aGlzLnJvdXRlckFuaW1hdGlvbik7XG4gICAgICB0aGlzLnJvdXRlck91dGxldC5wb3AoKTtcbiAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSBlbHNlIGlmIChkZWZhdWx0SHJlZiAhPSBudWxsKSB7XG4gICAgICB0aGlzLm5hdkN0cmwubmF2aWdhdGVCYWNrKGRlZmF1bHRIcmVmLCB7IGFuaW1hdGlvbjogdGhpcy5yb3V0ZXJBbmltYXRpb24gfSk7XG4gICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxufVxuIl19